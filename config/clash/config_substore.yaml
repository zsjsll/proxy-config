# 机场订阅
proxy-providers:
  airport:
    url: https://a.a.a/
    type: http
    interval: 43200
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: DIRECT

# 全局配置
mixed-port: 7890
socks-port: 7891
port: 7892
redir-port: 7893
tproxy-port: 7894
external-controller: 127.0.0.1:9999
secret: ""
allow-lan: true
bind-address: "*"
ipv6: true
unified-delay: true # 开启统一延迟，也就是看起来好看一点，没什么实际作用
tcp-concurrent: true # 启用 TCP 并发连接，将会使用 dns 解析出的所有 IP 地址进行连接，使用第一个成功的连接
# interface-name: enp6s18
# routing-mark: 6666 # 标记出内核的流量
log-level: silent
find-process-mode: "off"
global-client-fingerprint: chrome
disable-keep-alive: false
keep-alive-idle: 600
keep-alive-interval: 15
profile:
  store-selected: true
  store-fake-ip: true

# 嗅探
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.netflix.com"
    - "+.nflxvideo.net"
    - "+.amazonaws.com"
    - "+.media.dssott.com"
  skip-domain:
    - "+.apple.com"
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.oray.com"
    - "+.sunlogin.net"
    - "+.push.apple.com"

# 入站
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  device: utun
  dns-hijack:
    - any:53
    - tcp://any:53
  #使用nikki，混入全部不修改的情况，开启接口指定为nikki
  #使用仅内核自行修改下面三项为true
  #device: nikki
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  strict-route: true
  # 设置绕过clash的流量
  # route-exclude-address-set:
  #   - fakeip-filter
  #   - cn
  #   - private

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  # 可选值 fake-ip/redir-host，默认redir-host
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:fakeip_filter,cn,private,custom_direct"

  nameserver-policy:
    # 用于广告拦截，一旦这样设置
    # 就不能开启 direct-nameserver-follow-policy: true
    # 让 direct-nameserver 的优先级高于 nameserver-policy

    "rule-set:ads,custom_reject":
      - rcode://success

  # 用于解析DNS服务器的域名
  default-nameserver:
    - https://223.6.6.6/dns-query
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query
    - https://120.53.53.53/dns-query
    # - quic://223.6.6.6:853
    # - quic://223.5.5.5:853

  # 代理节点域名解析服务器，仅用于解析代理节点的域名
  proxy-server-nameserver:
    - https://223.6.6.6/dns-query
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query
    - https://120.53.53.53/dns-query
    # - quic://223.6.6.6:853
    # - quic://223.5.5.5:853

  # direct-nameserver-follow-policy: true  # 如果不开启这个配置 direct-nameserver 的优先级会高于 nameserver-policy
  # 用于 direct 出口域名解析的 DNS 服务器
  direct-nameserver:
    - system
    - 222.172.200.68
    - 61.166.150.123
    - 223.6.6.6
    - 223.5.5.5

  # 不要用 fallback ，在解析的时候会同时使用 nameserver 和 fallback ，造成DNS泄露
  nameserver:
    - https://101.101.101.101/dns-query#ecs=222.172.200.68/24&ecs-override=true
    - https://101.102.103.104/dns-query#ecs=222.172.200.68/24&ecs-override=true
    - https://1.1.1.1/dns-query#ecs=222.172.200.68/24&ecs-override=true
    - https://1.0.0.1/dns-query#ecs=222.172.200.68/24&ecs-override=true
    - https://8.8.8.8/dns-query#ecs=222.172.200.68/24&ecs-override=true
    - https://8.8.4.4/dns-query#ecs=222.172.200.68/24&ecs-override=true
    # - tls://[2606:4700:4700::64]#ecs=222.172.200.68/24&ecs-override=true
    # - tls://[2606:4700:4700::1111]#ecs=222.172.200.68/24&ecs-override=true
    # - quic://94.140.14.140/#ecs=222.172.200.68/24&ecs-override=true
    # - quic://94.140.14.141/#ecs=222.172.200.68/24&ecs-override=true

auto_test: &auto_test { type: url-test, tolerance: 50, interval: 180, include-all: true, url: https://www.gstatic.com/generate_204 }

proxy-groups:
  - { name: 🚀 节点选择, type: select, proxies: [♻️ 自动选择, ✋ 手动选择] }
  - { name: ✋ 手动选择, type: select, include-all: true }

  - { name: 🚫 广告, type: select, proxies: [❌ 拒绝, ✔️ 直连] } # 域名
  - { name: 🎮 游戏CN, type: select, proxies: [✔️ 直连, 🚀 节点选择] } # 域名
  - { name: Ⓜ️ 微软CN, type: select, proxies: [✔️ 直连, 🚀 节点选择] } # 域名
  - { name: 🌈 谷歌CN, type: select, proxies: [✔️ 直连, 🚀 节点选择] } # 域名
  - { name: 🍎 苹果CN, type: select, proxies: [✔️ 直连, 🚀 节点选择] } # 域名
  - { name: 📋 BT下载, type: select, proxies: [✔️ 直连, 🚀 节点选择] } # 域名
  - { name: 📈 网络测试, type: select, proxies: [✔️ 直连, 🚀 节点选择, ✋ 手动选择] } # 域名
  - { name: 🤖 AI!CN, type: select, proxies: [💡 AI节点, 🚀 节点选择, ✋ 手动选择] } # 域名
  - { name: 🌍 媒体!CN, type: select, proxies: [🚀 节点选择, ✋ 手动选择] } # 域名 + IP
  - { name: 🕹️ 游戏!CN, type: select, proxies: [🚀 节点选择, ✋ 手动选择] } # 域名 + IP
  - { name: 📲 电报!CN, type: select, proxies: [🚀 节点选择, ✋ 手动选择], hidden: true } # IP
  - { name: 🧱 海外FB, type: select, proxies: [🚀 节点选择, ✔️ 直连] } # 域名
  - { name: 🔗 国内FB, type: select, proxies: [✔️ 直连, 🚀 节点选择] } # 域名 + IP
  - { name: 🔐 私有网络, type: select, proxies: [✔️ 直连], hidden: true } # 域名 + IP
  - { name: 🐟 漏网之鱼, type: select, proxies: [🚀 节点选择, ✔️ 直连, ✋ 手动选择] }
  - { name: ✔️ 直连, type: select, proxies: [DIRECT], hidden: true }
  - { name: ❌ 拒绝, type: select, proxies: [REJECT], hidden: true }

  - { <<: *auto_test, name: ♻️ 自动选择 }
  - { <<: *auto_test, name: 💡 AI节点, exclude-filter: "(?i)🏴‍☠️|❓|其他|other|🇭🇰|港|hk|hong ?kong|🇷🇺|俄罗斯|ru|Russia" }

rules:
  # - AND,((DST-PORT,443),(NETWORK,UDP)),(NOT,(RULE-SET,cn)),REJECT # 屏蔽国外的QUIC连接
  - RULE-SET,custom_proxy,🧱 海外FB
  - RULE-SET,custom_direct,🔗 国内FB
  - RULE-SET,custom_reject,🚫 广告
  - RULE-SET,ads,🚫 广告
  - RULE-SET,networktest,📈 网络测试
  - RULE-SET,private,🔐 私有网络
  - RULE-SET,trackerslist,📋 BT下载
  - RULE-SET,microsoft_cn,Ⓜ️ 微软CN
  - RULE-SET,apple_cn,🍎 苹果CN
  - RULE-SET,google_cn,🌈 谷歌CN
  - RULE-SET,games_cn,🎮 游戏CN
  - RULE-SET,ai,🤖 AI!CN
  - RULE-SET,games,🕹️ 游戏!CN
  - RULE-SET,media,🌍 媒体!CN
  - RULE-SET,tld_proxy,🧱 海外FB
  - RULE-SET,proxy,🧱 海外FB
  - RULE-SET,cn,🔗 国内FB
  - RULE-SET,private_ip,🔐 私有网络,no-resolve
  - RULE-SET,cn_ip,🔗 国内FB
  - RULE-SET,media_ip,🌍 媒体!CN
  - RULE-SET,games_ip,🕹️ 游戏!CN
  - RULE-SET,telegram_ip,📲 电报!CN,no-resolve
  - MATCH,🐟 漏网之鱼

rule-anchor:
  domain: &domain { type: http, interval: 86400, behavior: domain, format: mrs }
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: mrs }
  class: &class { type: http, interval: 86400, behavior: classical, format: yaml }

rule-providers:
  fakeip_filter: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/fakeip-filter.mrs" }
  private: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/private.mrs" }
  ads: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ads.mrs" }
  trackerslist: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/trackerslist.mrs" }
  microsoft_cn: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/microsoft-cn.mrs" }
  apple_cn: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/apple-cn.mrs" }
  google_cn: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/google-cn.mrs" }
  games_cn: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/games-cn.mrs" }
  media: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/media.mrs" }
  games: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/games.mrs" }
  ai: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ai.mrs" }
  networktest: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/networktest.mrs" }
  tld_proxy: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/tld-proxy.mrs" }
  proxy: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/proxy.mrs" }
  cn: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cn.mrs" }

  private_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/privateip.mrs" }
  cn_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cnip.mrs" }
  media_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/mediaip.mrs" }
  games_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/gamesip.mrs" }
  telegram_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/telegramip.mrs" }

  custom_proxy: { <<: *class, url: "https://raw.githubusercontent.com/zsjsll/proxy-config/refs/heads/self/rules/proxy.yaml" }
  custom_direct: { <<: *class, url: "https://raw.githubusercontent.com/zsjsll/proxy-config/refs/heads/self/rules/direct.yaml" }
  custom_reject: { <<: *class, url: "https://raw.githubusercontent.com/zsjsll/proxy-config/refs/heads/self/rules/reject.yaml" }
